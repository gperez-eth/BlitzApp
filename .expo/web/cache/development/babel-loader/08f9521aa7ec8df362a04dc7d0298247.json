{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\Blitz\\\\routes\\\\Route.tsx\";\nimport { Ionicons } from '@expo/vector-icons';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport React from 'react';\n\nfunction DetailsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Details!\"));\n}\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"Home screen\"), React.createElement(Button, {\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      return navigation.navigate('Details');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction SettingsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"Settings screen\"), React.createElement(Button, {\n    title: \"Go to Details\",\n    onPress: function onPress() {\n      return navigation.navigate('Details');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar HomeStack = createStackNavigator();\n\nfunction HomeStackScreen() {\n  return React.createElement(HomeStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }));\n}\n\nvar SettingsStack = createStackNavigator();\n\nfunction SettingsStackScreen() {\n  return React.createElement(SettingsStack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(SettingsStack.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }), React.createElement(SettingsStack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }));\n}\n\nfunction MyTabs() {\n  return React.createElement(Tab.Navigator, {\n    barStyle: {\n      backgroundColor: 'white'\n    },\n    labeled: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Ionicons, {\n          style: {\n            backgroundColor: 'transparent'\n          },\n          name: 'ios-home',\n          size: 25,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Ionicons, {\n          name: 'ios-settings',\n          size: 25,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: SettingsStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Ionicons, {\n          name: 'ios-settings',\n          size: 25,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Explore\",\n    component: SettingsStackScreen,\n    options: {\n      tabBarIcon: function tabBarIcon() {\n        return React.createElement(Ionicons, {\n          name: 'ios-settings',\n          size: 25,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref3) {\n      var route = _ref3.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var focused = _ref4.focused,\n              color = _ref4.color,\n              size = _ref4.size;\n          var iconName;\n\n          if (route.name === 'Home') {\n            iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n          } else if (route.name === 'Settings') {\n            iconName = focused ? 'ios-list-box' : 'ios-list';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 22\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'tomato',\n      inactiveTintColor: 'gray'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Users/PC/Desktop/Blitz/routes/Route.tsx"],"names":["Ionicons","NavigationContainer","React","DetailsScreen","flex","justifyContent","alignItems","HomeScreen","navigation","navigate","SettingsScreen","HomeStack","createStackNavigator","HomeStackScreen","SettingsStack","SettingsStackScreen","MyTabs","backgroundColor","tabBarIcon","App","route","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import { Ionicons } from '@expo/vector-icons';\r\nimport { createMaterialBottomTabNavigator } from '@react-navigation/material-bottom-tabs';\r\n//import { createStackNavigator } from '@react-navigation/stack';\r\nimport { Text, View, Button } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport React from 'react';\r\n\r\n//const Tab = createMaterialBottomTabNavigator();\r\n\r\nfunction DetailsScreen() {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>Details!</Text>\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  function HomeScreen({ navigation }) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>Home screen</Text>\r\n        <Button\r\n          title=\"Go to Details\"\r\n          onPress={() => navigation.navigate('Details')}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  function SettingsScreen({ navigation }) {\r\n    return (\r\n      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n        <Text>Settings screen</Text>\r\n        <Button\r\n          title=\"Go to Details\"\r\n          onPress={() => navigation.navigate('Details')}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n  \r\n  const HomeStack = createStackNavigator();\r\n  \r\n  function HomeStackScreen() {\r\n    return (\r\n      <HomeStack.Navigator>\r\n        <HomeStack.Screen name=\"Home\" component={HomeScreen} />\r\n        <HomeStack.Screen name=\"Details\" component={DetailsScreen} />\r\n      </HomeStack.Navigator>\r\n    );\r\n  }\r\n  \r\n  const SettingsStack = createStackNavigator();\r\n  \r\n  function SettingsStackScreen() {\r\n    return (\r\n      <SettingsStack.Navigator>\r\n        <SettingsStack.Screen name=\"Settings\" component={SettingsScreen} />\r\n        <SettingsStack.Screen name=\"Details\" component={DetailsScreen} />\r\n      </SettingsStack.Navigator>\r\n    );\r\n  }\r\n\r\nfunction MyTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      barStyle = {{ backgroundColor: 'white' }}\r\n      labeled = {true}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={HomeStackScreen}\r\n        options={{\r\n          tabBarIcon: () => (\r\n            <Ionicons style={{ backgroundColor: 'transparent' }} name={'ios-home'} size={25} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Settings\"\r\n        component={SettingsStackScreen}\r\n        options={{\r\n          tabBarIcon: () => (\r\n            <Ionicons name={'ios-settings'} size={25}/>\r\n          ),\r\n          \r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={SettingsStackScreen}\r\n        options={{\r\n          tabBarIcon: () => (\r\n            <Ionicons name={'ios-settings'} size={25}/>\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Explore\"\r\n        component={SettingsStackScreen}\r\n        options={{\r\n          tabBarIcon: () => (\r\n            <Ionicons name={'ios-settings'} size={25}/>\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n\r\n/*export default function App() {\r\n    return (\r\n      <NavigationContainer>\r\n        <MyTabs />\r\n      </NavigationContainer>\r\n    );\r\n  }*/\r\n\r\n  export default function App() {\r\n    return (\r\n      <NavigationContainer>\r\n        <Tab.Navigator\r\n          screenOptions={({ route }) => ({\r\n            tabBarIcon: ({ focused, color, size }) => {\r\n              let iconName;\r\n  \r\n              if (route.name === 'Home') {\r\n                iconName = focused\r\n                  ? 'ios-information-circle'\r\n                  : 'ios-information-circle-outline';\r\n              } else if (route.name === 'Settings') {\r\n                iconName = focused ? 'ios-list-box' : 'ios-list';\r\n              }\r\n  \r\n              // You can return any component that you like here!\r\n              return <Ionicons name={iconName} size={size} color={color} />;\r\n            },\r\n          })}\r\n          tabBarOptions={{\r\n            activeTintColor: 'tomato',\r\n            inactiveTintColor: 'gray',\r\n          }}\r\n        >\r\n          <Tab.Screen name=\"Home\" component={HomeScreen} />\r\n          <Tab.Screen name=\"Settings\" component={SettingsScreen} />\r\n        </Tab.Navigator>\r\n      </NavigationContainer>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}