{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase';\nimport \"@firebase/firestore\";\nimport { v4 as uuidv4 } from 'uuid';\n\nvar Fire = function () {\n  function Fire(callback) {\n    _classCallCheck(this, Fire);\n  }\n\n  _createClass(Fire, [{\n    key: \"getFeatured\",\n    value: function getFeatured(callback) {\n      var ref = this.ref.where(\"likes\", \">=\", 15);\n      this.unsubscribe = ref.onSnapshot(function (snapshot) {\n        tutoriales = [];\n        snapshot.forEach(function (doc) {\n          tutoriales.push(_objectSpread({\n            'id': doc.id\n          }, doc.data()));\n        });\n        tutoriales.forEach(function (tut) {\n          tut.image.sort(function (a, b) {\n            return a.number - b.number;\n          });\n        });\n        callback(tutoriales);\n      });\n    }\n  }, {\n    key: \"getTutoriales\",\n    value: function getTutoriales(callback) {\n      var ref = this.ref.limit(15);\n      this.unsubscribe = ref.onSnapshot(function (snapshot) {\n        tutoriales = [];\n        snapshot.forEach(function (doc) {\n          if (doc.data().image) {\n            tutoriales.push(_objectSpread({\n              'id': doc.id\n            }, doc.data()));\n          }\n        });\n        tutoriales.forEach(function (tut) {\n          tut.image.sort(function (a, b) {\n            return a.number - b.number;\n          });\n        });\n        callback(tutoriales);\n      });\n    }\n  }, {\n    key: \"addTutorial\",\n    value: function addTutorial(tutorial, images, callback) {\n      var id = '';\n      var ref = this.ref;\n      var uploadStatus = {\n        steps: false,\n        images: false,\n        error: false\n      };\n      ref.add(tutorial).then(function (docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n        id = docRef.id;\n      });\n      images.forEach(function _callee(obj, i) {\n        var response, blob, fileExtension, uuid, fileName, storageRef, uploadTask;\n        return _regeneratorRuntime.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!obj.image) {\n                  _context.next = 15;\n                  break;\n                }\n\n                _context.next = 3;\n                return _regeneratorRuntime.awrap(fetch(obj.uri));\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(response.blob());\n\n              case 6:\n                blob = _context.sent;\n                fileExtension = obj.uri.split('.').pop();\n                uuid = uuidv4();\n                fileName = uuid + \".\" + fileExtension;\n                storageRef = firebase.storage().ref(\"images/\" + fileName);\n                uploadTask = storageRef.put(blob);\n                uploadTask.on('state_changed', function (snapshot) {}, function (error) {\n                  console.log('Error during the upload :(');\n                  uploadStatus.steps = false;\n                  uploadStatus.images = false;\n                  uploadStatus.error = true;\n                  callback(uploadStatus);\n                  return;\n                }, function () {\n                  storageRef.getDownloadURL().then(function (downloadUrl) {\n                    console.log(\"File available at: \" + downloadUrl);\n                    ref.doc(id).update({\n                      image: firebase.firestore.FieldValue.arrayUnion({\n                        url: downloadUrl,\n                        number: i\n                      })\n                    });\n                  });\n\n                  if (i == images.length - 1) {\n                    uploadStatus.images = true;\n                    callback(uploadStatus);\n                  }\n                });\n                _context.next = 18;\n                break;\n\n              case 15:\n                console.log(\"Skipping image upload\");\n                uploadStatus.steps = true;\n                callback(uploadStatus);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      });\n    }\n  }, {\n    key: \"updateTutorial\",\n    value: function updateTutorial(tutorial) {\n      var ref = this.ref;\n      ref.doc(tutorial.id).update(tutorial);\n    }\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      this.unsubscribe();\n    }\n  }, {\n    key: \"ref\",\n    get: function get() {\n      return firebase.firestore().collection('tutoriales');\n    }\n  }]);\n\n  return Fire;\n}();\n\nexport default Fire;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/BlitzApp/src/database/Fire.js"],"names":["firebase","v4","uuidv4","Fire","callback","ref","where","unsubscribe","onSnapshot","snapshot","tutoriales","forEach","doc","push","id","data","tut","image","sort","a","b","number","limit","tutorial","images","uploadStatus","steps","error","add","then","docRef","console","log","obj","i","fetch","uri","response","blob","fileExtension","split","pop","uuid","fileName","storageRef","storage","uploadTask","put","on","getDownloadURL","downloadUrl","update","firestore","FieldValue","arrayUnion","url","length","collection"],"mappings":"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","sourcesContent":[" import firebase from 'firebase'\r\n import \"@firebase/firestore\"\r\n import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Fire {\r\n\r\n    constructor(callback) {\r\n\r\n    }\r\n    \r\n    get ref() {\r\n        return firebase.firestore().collection('tutoriales')\r\n    }\r\n\r\n    getFeatured(callback) {\r\n        let ref = this.ref.where(\"likes\", \">=\", 15)\r\n        this.unsubscribe = ref.onSnapshot(snapshot => {\r\n            tutoriales = []\r\n\r\n            snapshot.forEach(doc  => {\r\n                tutoriales.push({ 'id': doc.id, ...doc.data() })\r\n            })\r\n\r\n            tutoriales.forEach(tut => {\r\n                tut.image.sort(function(a, b) {\r\n                    return a.number - b.number;\r\n                });\r\n            })\r\n\r\n            callback(tutoriales)\r\n        })\r\n    }\r\n\r\n    getTutoriales(callback) {\r\n        let ref = this.ref.limit(15)\r\n        this.unsubscribe = ref.onSnapshot(snapshot => {\r\n            tutoriales = []\r\n\r\n            snapshot.forEach(doc  => {\r\n                if (doc.data().image) {\r\n                    tutoriales.push({ 'id': doc.id, ...doc.data() })\r\n                }\r\n            })\r\n            \r\n            tutoriales.forEach(tut => {\r\n                tut.image.sort(function(a, b) {\r\n                    return a.number - b.number;\r\n                });\r\n            })\r\n            callback(tutoriales)\r\n        })\r\n    }\r\n\r\n    addTutorial(tutorial, images, callback) {\r\n        let id = ''\r\n        let ref = this.ref\r\n        let uploadStatus = {steps: false, images: false, error: false}\r\n\r\n        ref.add(tutorial).then(function(docRef) {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n            id = docRef.id\r\n        })\r\n\r\n        images.forEach( async function(obj, i) {\r\n            if (obj.image) {\r\n\r\n                var response = await fetch(obj.uri)\r\n                var blob = await response.blob()\r\n\r\n                const fileExtension = obj.uri.split('.').pop();\r\n            \r\n                var uuid = uuidv4();\r\n            \r\n                const fileName = `${uuid}.${fileExtension}`;\r\n            \r\n                var storageRef = firebase.storage().ref(`images/${fileName}`);\r\n            \r\n                var uploadTask = storageRef.put(blob);\r\n\r\n                uploadTask.on('state_changed', function(snapshot) {\r\n                    \r\n                }, function(error) {\r\n                    // Handle unsuccessful uploads\r\n                    console.log('Error during the upload :(')\r\n                    uploadStatus.steps = false\r\n                    uploadStatus.images = false\r\n                    uploadStatus.error = true\r\n                    callback(uploadStatus)\r\n                    return\r\n                }, () => {\r\n                    storageRef.getDownloadURL().then((downloadUrl) => {\r\n                        console.log(\"File available at: \" + downloadUrl);\r\n                        ref.doc(id).update(\r\n                            {image: firebase.firestore.FieldValue.arrayUnion({url: downloadUrl, number: i})}\r\n                        )\r\n                    })\r\n                    if (i == (images.length -1)) {\r\n                        uploadStatus.images = true\r\n                        callback(uploadStatus)\r\n                    }\r\n                })\r\n            } else {\r\n                console.log(\"Skipping image upload\");\r\n                uploadStatus.steps = true\r\n                callback(uploadStatus)\r\n            }\r\n        })\r\n    }\r\n\r\n    updateTutorial(tutorial) {\r\n        let ref = this.ref\r\n        ref.doc(tutorial.id).update(tutorial)\r\n    }\r\n\r\n    detach() {\r\n        this.unsubscribe();\r\n    }\r\n}\r\n\r\nexport default Fire"]},"metadata":{},"sourceType":"module"}