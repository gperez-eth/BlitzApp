{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\BlitzApp\\\\App.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Router from \"./src/routes/Route\";\nimport { Login } from \"./src/Screens\";\nimport firebase from 'firebase';\nimport { LoadAssets } from \"./src/Components\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyAbjZ3J6HBB6UPW1013YwOU8wpsjONJ9wQ\",\n  authDomain: \"blitzexpo-3d09d.firebaseapp.com\",\n  databaseURL: \"https://blitzexpo-3d09d.firebaseio.com\",\n  projectId: \"blitzexpo-3d09d\",\n  storageBucket: \"blitzexpo-3d09d.appspot.com\",\n  messagingSenderId: \"776100349571\",\n  appId: \"1:776100349571:web:c0f748655fa7e91f79fdb6\"\n};\nvar fonts = {\n  \"Bold\": require(\"./assets/fonts/SF-Pro-Text-Bold.otf\"),\n  \"Semibold\": require(\"./assets/fonts/SF-Pro-Text-Semibold.otf\"),\n  \"Regular\": require(\"./assets/fonts/SF-Pro-Text-Regular.otf\")\n};\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      loggedIn: null\n    };\n\n    _this.renderContent = function () {\n      switch (_this.state.loggedIn) {\n        case false:\n          return React.createElement(Login, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 16\n            }\n          });\n\n        case true:\n          return React.createElement(Router, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 16\n            }\n          });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n      }\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.setState({\n            loggedIn: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: false\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(LoadAssets, _extends({\n        fonts: fonts\n      }, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      }), this.renderContent());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/BlitzApp/App.tsx"],"names":["React","Component","Router","Login","firebase","LoadAssets","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","fonts","require","App","state","loggedIn","renderContent","apps","length","initializeApp","auth","onAuthStateChanged","user","setState"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP;AACA,SAASC,KAAT;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,UAAT;AAEA,IAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,iCAFS;AAGrBC,EAAAA,WAAW,EAAE,wCAHQ;AAIrBC,EAAAA,SAAS,EAAE,iBAJU;AAKrBC,EAAAA,aAAa,EAAE,6BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE;AAPc,CAAvB;AAUA,IAAMC,KAAK,GAAG;AACZ,UAAQC,OAAO,uCADH;AAEZ,cAAYA,OAAO,2CAFP;AAGZ,aAAWA,OAAO;AAHN,CAAd;;IAMMC,G;;;;;;;;;;;;;;;UAEJC,K,GAAM;AACJC,MAAAA,QAAQ,EAAC;AADL,K;;UAuBNC,a,GAAgB,YAAM;AACpB,cAAO,MAAKF,KAAL,CAAWC,QAAlB;AACE,aAAK,KAAL;AACE,iBAAO,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AACF,aAAK,IAAL;AACE,iBAAO,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAJJ;AAMD,K;;;;;;;wCA1BmB;AAAA;;AAElB,UAAI,CAACd,QAAQ,CAACgB,IAAT,CAAcC,MAAnB,EAA2B;AACzBjB,QAAAA,QAAQ,CAACkB,aAAT,CAAuBhB,cAAvB;AACD;;AAEDF,MAAAA,QAAQ,CAACmB,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACvC,YAAIA,IAAJ,EAAU;AACR,UAAA,MAAI,CAACC,QAAL,CAAc;AACZR,YAAAA,QAAQ,EAAC;AADG,WAAd;AAGD,SAJD,MAIO;AACL,UAAA,MAAI,CAACQ,QAAL,CAAc;AACZR,YAAAA,QAAQ,EAAC;AADG,WAAd;AAGD;AACJ,OAVD;AAWD;;;6BAWQ;AACP,aACE,oBAAC,UAAD,WAAgB;AAAEJ,QAAAA,KAAK,EAALA;AAAF,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACG,KAAKK,aAAL,EADH,CADF;AAKD;;;;EAxCelB,S;;AA2ClB,eAAee,GAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Router from './src/routes/Route'\r\nimport { Login } from './src/Screens'\r\nimport firebase from 'firebase'\r\nimport { LoadAssets } from './src/Components';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAbjZ3J6HBB6UPW1013YwOU8wpsjONJ9wQ\",\r\n  authDomain: \"blitzexpo-3d09d.firebaseapp.com\",\r\n  databaseURL: \"https://blitzexpo-3d09d.firebaseio.com\",\r\n  projectId: \"blitzexpo-3d09d\",\r\n  storageBucket: \"blitzexpo-3d09d.appspot.com\",\r\n  messagingSenderId: \"776100349571\",\r\n  appId: \"1:776100349571:web:c0f748655fa7e91f79fdb6\"\r\n};\r\n\r\nconst fonts = {\r\n  \"Bold\": require(\"./assets/fonts/SF-Pro-Text-Bold.otf\"),\r\n  \"Semibold\": require(\"./assets/fonts/SF-Pro-Text-Semibold.otf\"),\r\n  \"Regular\": require(\"./assets/fonts/SF-Pro-Text-Regular.otf\"),\r\n};\r\n\r\nclass App extends Component {\r\n\r\n  state={\r\n    loggedIn:null\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Initialize Firebase\r\n    if (!firebase.apps.length) {\r\n      firebase.initializeApp(firebaseConfig)\r\n    }\r\n  \r\n    firebase.auth().onAuthStateChanged(user => {\r\n        if (user) {\r\n          this.setState({\r\n            loggedIn:true\r\n          })\r\n        } else {\r\n          this.setState({\r\n            loggedIn:false\r\n          })\r\n        }\r\n    })\r\n  }\r\n\r\n  renderContent = () => {\r\n    switch(this.state.loggedIn){\r\n      case false:\r\n        return <Login/>\r\n      case true:\r\n        return <Router/>\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoadAssets {...{ fonts }}>\r\n        {this.renderContent()}\r\n      </LoadAssets>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}