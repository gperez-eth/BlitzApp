{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\BlitzApp\\\\src\\\\Screens\\\\UploadingTransition.tsx\";\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { AntDesign } from '@expo/vector-icons';\nvar screenWidth = Math.round(Dimensions.get('window').width);\n\nfunction renderStatus(status) {\n  if (status.steps || status.images) {\n    return React.createElement(View, {\n      style: styles.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }, React.createElement(Ionicons, {\n      name: \"ios-checkmark-circle\",\n      size: 100,\n      color: \"#B9B3FF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"El tutorial se ha subido correctamente!\"));\n  } else if (status.error) {\n    return React.createElement(View, {\n      style: styles.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, React.createElement(AntDesign, {\n      name: \"minuscircle\",\n      size: 100,\n      color: \"#B9B3FF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"Error! compruebe que las imagenes tienen un formato correcto\"));\n  } else {\n    return React.createElement(View, {\n      style: styles.content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, React.createElement(AntDesign, {\n      name: \"questioncircle\",\n      size: 100,\n      color: \"#B9B3FF\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }), React.createElement(Text, {\n      style: styles.text,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, \"Ha ocurrido un error inesperado :(\"));\n  }\n}\n\nvar UploadingTransition = function UploadingTransition(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var status = route.params.status;\n  console.log(status);\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, renderStatus(status));\n};\n\nexport default UploadingTransition;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 10,\n    backgroundColor: 'white',\n    justifyContent: 'center'\n  },\n  content: {\n    alignItems: 'center'\n  },\n  text: {\n    fontFamily: 'Semibold',\n    fontSize: 25,\n    textAlign: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Administrator/Desktop/BlitzApp/src/Screens/UploadingTransition.tsx"],"names":["React","Ionicons","AntDesign","screenWidth","Math","round","Dimensions","get","width","renderStatus","status","steps","images","styles","content","text","error","UploadingTransition","route","navigation","params","console","log","container","StyleSheet","create","flex","padding","backgroundColor","justifyContent","alignItems","fontFamily","fontSize","textAlign"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Text, View, Button, StyleSheet } from 'react-native';\r\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\r\nimport { Categoria } from '../Components'\r\nimport { Dimensions } from \"react-native\";\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { AntDesign } from '@expo/vector-icons';\r\n\r\nconst screenWidth = Math.round(Dimensions.get('window').width);\r\n\r\nfunction renderStatus(status) {\r\n  if (status.steps || status.images) {\r\n    return (\r\n      <View style={styles.content}>\r\n        <Ionicons name=\"ios-checkmark-circle\" size={100} color=\"#B9B3FF\" />\r\n        <Text style={styles.text}>El tutorial se ha subido correctamente!</Text>\r\n      </View>\r\n    )\r\n    \r\n  } else if (status.error) {\r\n    return (\r\n      <View style={styles.content}>\r\n        <AntDesign name=\"minuscircle\" size={100} color=\"#B9B3FF\" />\r\n        <Text style={styles.text}>Error! compruebe que las imagenes tienen un formato correcto</Text>\r\n      </View>\r\n    )\r\n  } else {\r\n    return (\r\n      <View style={styles.content}>\r\n        <AntDesign name=\"questioncircle\" size={100} color=\"#B9B3FF\" />\r\n        <Text style={styles.text}>Ha ocurrido un error inesperado :(</Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst UploadingTransition = ({ route, navigation }) => {\r\n  const { status } = route.params;\r\n  console.log(status)\r\n  return (\r\n    <View style={styles.container}>\r\n        {renderStatus(status)}\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default UploadingTransition;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: 'white',\r\n    justifyContent: 'center'\r\n  },\r\n  content: {\r\n    alignItems: 'center',\r\n  },\r\n  text: {\r\n    fontFamily: 'Semibold',\r\n    fontSize: 25,\r\n    textAlign: 'center'\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}